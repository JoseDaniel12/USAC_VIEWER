/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author JosÃ© Alvarado
 */
public class Biblioteca extends javax.swing.JFrame {

    /**
     * Creates new form Biblioteca
     */
    public Biblioteca() {
        initComponents();
        if (AppState.actualUser != "") {
            renderBiblioteca();
        }
        
        /*
        Lista.getSelectionModel().addListSelectionListener(e -> {
            String userName = NameUser.getText();
            String categoryName = Lista.getSelectedValue().toString();
            Usuario usuario = (Usuario)AppState.usuarios.find(userName);
            Categoria categoria = (Categoria)usuario.categorias.get(Lista.getSelectedIndex());
            if((ImageIcon)categoria.imagenes.get(0) != null) {
                ContenedorIMG.setIcon((ImageIcon)categoria.imagenes.get(0));
                indexIMG.setText("Fotogrfia (1/" + categoria.imagenes.getSize() + ")");
            } else {
                ContenedorIMG.setIcon(null);
                indexIMG.setText("Fotogrfia (0/" + categoria.imagenes.getSize() + ")");
            }
        });
        */
        
    }

    public void renderBiblioteca() {
        NameUser.setText(AppState.actualUser);
        CategoriaIngreso.setText("");
        Usuario usuario = (Usuario)AppState.usuarios.find(AppState.actualUser);
        int nCategorias = usuario.categorias.getSize();     
        DefaultListModel modelo = new DefaultListModel();
        for (int i = 0; i < nCategorias; i++) {
            modelo.addElement(((Categoria)usuario.categorias.get(i)).nombre);
        }
        Lista.setModel(modelo);
        Lista.setSelectedIndex(0);
        ContenedorIMG.setIcon((ImageIcon)((Categoria)usuario.categorias.get(0)).imagenes.get(0));
        
        int numero = ((Categoria)usuario.categorias.find("General")).imagenes.getSize();
        if (numero != 0) {
            indexIMG.setText("Fotogrfia (1/" + numero + ")");
        } else {
            indexIMG.setText("Fotogrfia (0/0)");
        }       
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContenedorIMG = new javax.swing.JLabel();
        Selecionar = new javax.swing.JButton();
        AgregarCategoria = new javax.swing.JButton();
        EliminarCategoria = new javax.swing.JButton();
        NameUser = new javax.swing.JLabel();
        indexIMG = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        DeleteIMG = new javax.swing.JButton();
        NextIMG = new javax.swing.JButton();
        PreviousIMG = new javax.swing.JButton();
        CategoriaIngreso = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lista = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        MostrarImagenes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ContenedorIMG.setBackground(new java.awt.Color(204, 204, 204));
        ContenedorIMG.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Selecionar.setText("Agregar Imagen");
        Selecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecionarActionPerformed(evt);
            }
        });

        AgregarCategoria.setText("Agregar Categoria");
        AgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarCategoriaActionPerformed(evt);
            }
        });

        EliminarCategoria.setText("Eliminar Categoria Selcionada");
        EliminarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarCategoriaActionPerformed(evt);
            }
        });

        NameUser.setText("User Name");

        indexIMG.setText("Fotografia (0/0)");

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        DeleteIMG.setText("Eliminar Imagen");
        DeleteIMG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteIMGActionPerformed(evt);
            }
        });

        NextIMG.setText(">");
        NextIMG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextIMGActionPerformed(evt);
            }
        });

        PreviousIMG.setText("<");
        PreviousIMG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousIMGActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(Lista);

        jLabel1.setText("Categoiras");

        MostrarImagenes.setText("Mostrar Imagenes");
        MostrarImagenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarImagenesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Selecionar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DeleteIMG)
                                        .addGap(278, 278, 278)
                                        .addComponent(NameUser))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(PreviousIMG)
                                        .addGap(12, 12, 12)
                                        .addComponent(ContenedorIMG, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(NextIMG))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(283, 283, 283)
                                .addComponent(indexIMG))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(EliminarCategoria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CategoriaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AgregarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(78, 78, 78)
                        .addComponent(MostrarImagenes, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameUser)
                            .addComponent(Selecionar)
                            .addComponent(DeleteIMG))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(indexIMG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NextIMG, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                            .addComponent(PreviousIMG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ContenedorIMG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CategoriaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgregarCategoria)
                    .addComponent(jButton3)
                    .addComponent(MostrarImagenes))
                .addGap(18, 18, 18)
                .addComponent(EliminarCategoria)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecionarActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Seleccioanar imagen", "jpg", "png");
        chooser.setFileFilter(extensionFilter);
        chooser.setMultiSelectionEnabled(true);
        File[] files = null;
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            files = chooser.getSelectedFiles();
        }  
        
        String imageName = "";
        if (files != null) {
            Toolkit tool = Toolkit.getDefaultToolkit();
            Usuario usuario = (Usuario)AppState.usuarios.find(AppState.actualUser);
            Categoria categoria = (Categoria)usuario.categorias.get(Lista.getSelectedIndex());        
            for (File file : files) {
                int indiceInicial = file.toString().lastIndexOf("\\") + 1;
                int indiceFinal = file.toString().lastIndexOf(".");
                imageName = file.toString().substring(indiceInicial, indiceFinal);
                Image imagen  =  tool.createImage(file.toString());
                ImageIcon icon = new ImageIcon(imagen.getScaledInstance(ContenedorIMG.getWidth(), ContenedorIMG.getHeight(), Image.SCALE_AREA_AVERAGING));
                categoria.imagenes.add(new Imagen(imageName, icon, file.toString()));
            }
            indexIMG.setText("Fotografia (" + categoria.imagenes.getIndex(ContenedorIMG.getIcon()) + "/" + categoria.imagenes.getSize() + ")");
            AppState.serializar();
        }

    }//GEN-LAST:event_SelecionarActionPerformed

    private void DeleteIMGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteIMGActionPerformed
        Usuario usuario = (Usuario)AppState.usuarios.find( NameUser.getText());
        Categoria categoria = (Categoria)usuario.categorias.get(Lista.getSelectedIndex());
        ImageIcon icon = (ImageIcon)ContenedorIMG.getIcon();
        if (categoria.imagenes.getSize() > 1) {
            ContenedorIMG.setIcon((ImageIcon)categoria.imagenes.getNext(icon));
            categoria.imagenes.delete(icon);
            indexIMG.setText("Fotografia (" + categoria.imagenes.getIndex(ContenedorIMG.getIcon()) + "/" + categoria.imagenes.getSize() + ")");
        } else {
            ContenedorIMG.setIcon(null);
            categoria.imagenes.delete(icon);
            indexIMG.setText("Fotografia (0/0)");
        }
        AppState.serializar();   
    }//GEN-LAST:event_DeleteIMGActionPerformed

    private void NextIMGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextIMGActionPerformed
        Usuario usuario = (Usuario)AppState.usuarios.find(NameUser.getText());
        Categoria categoria = (Categoria)usuario.categorias.get(Lista.getSelectedIndex());
        ImageIcon imagen = (ImageIcon)ContenedorIMG.getIcon();
        ImageIcon siguiente  = (ImageIcon)categoria.imagenes.getNext(imagen);
        ContenedorIMG.setIcon(siguiente);
        indexIMG.setText("Fotografia (" + categoria.imagenes.getIndex(siguiente) + "/" + categoria.imagenes.getSize() + ")");       
    }//GEN-LAST:event_NextIMGActionPerformed

    private void PreviousIMGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousIMGActionPerformed
        Usuario usuario = (Usuario)AppState.usuarios.find(NameUser.getText());
        Categoria categoria = (Categoria)usuario.categorias.get(Lista.getSelectedIndex());
        ImageIcon imagen = (ImageIcon)ContenedorIMG.getIcon();
        ImageIcon anterior  = (ImageIcon)categoria.imagenes.getPrevious(imagen);
        ContenedorIMG.setIcon(anterior);
        indexIMG.setText("Fotografia (" + categoria.imagenes.getIndex(anterior) + "/" + categoria.imagenes.getSize() + ")");    
    }//GEN-LAST:event_PreviousIMGActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Principal ventana = new Principal();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void AgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarCategoriaActionPerformed
        String userName = NameUser.getText();
        String categoryName = CategoriaIngreso.getText();
        Usuario usuario = (Usuario)AppState.usuarios.find(userName);
        usuario.categorias.add(new Categoria(categoryName));
        AppState.serializar();
        renderBiblioteca();
        
    }//GEN-LAST:event_AgregarCategoriaActionPerformed

    private void EliminarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarCategoriaActionPerformed
        String userName = NameUser.getText();
        String categoryName = Lista.getSelectedValue().toString();
        Usuario usuario = (Usuario)AppState.usuarios.find(userName);
        usuario.categorias.delete(categoryName);
        AppState.serializar();
        renderBiblioteca();
    }//GEN-LAST:event_EliminarCategoriaActionPerformed

    private void MostrarImagenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarImagenesActionPerformed
        Usuario usuario = (Usuario)AppState.usuarios.find(NameUser.getText());
        Categoria categoria = (Categoria)usuario.categorias.get(Lista.getSelectedIndex());
        ImageIcon icon = ((ImageIcon)categoria.imagenes.get(0));
        ContenedorIMG.setIcon(icon);
        if(icon != null) {
            indexIMG.setText("Fotogrfia (1/" + categoria.imagenes.getSize() + ")");
        } else {
            indexIMG.setText("Fotogrfia (0/" + categoria.imagenes.getSize() + ")");
        }
    }//GEN-LAST:event_MostrarImagenesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Biblioteca().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarCategoria;
    private javax.swing.JTextField CategoriaIngreso;
    private javax.swing.JLabel ContenedorIMG;
    private javax.swing.JButton DeleteIMG;
    private javax.swing.JButton EliminarCategoria;
    private javax.swing.JList Lista;
    private javax.swing.JButton MostrarImagenes;
    private javax.swing.JLabel NameUser;
    private javax.swing.JButton NextIMG;
    private javax.swing.JButton PreviousIMG;
    private javax.swing.JButton Selecionar;
    private javax.swing.JLabel indexIMG;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
